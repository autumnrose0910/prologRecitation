drawSymbol(Symbol, 0).
drawSymbol(Symbol, N) :- N > 0, write(Symbol), N1 is N - 1, drawSymbol(Symbol, N1).


drawHorizontalLine(Symbol, 0) :- nl.
drawHorizontalLine(Symbol, N) :- drawSymbol(Symbol, N).


drawVerticalLinesWithSpace(Symbol, 0, Width).
drawVerticalLinesWithSpace(Symbol, Height, Width) :- 
  Height > 0,
  write(Symbol),
  drawSymbol(' ', Width - 2),
  write(Symbol),
  nl,
  Height1 is Height - 1,
  drawVerticalLinesWithSpace(Symbol, Height1, Width).

/* draw a */
drawA(TextWidth, TextHeight, FontSize, CurrentLine, ColumnNumber) :-
  ColumnNumber >= TextWidth.

drawA(TextWidth, TextHeight, FontSize, CurrentLine, ColumnNumber) :-
  (
    (ColumnNumber >= 0, ColumnNumber < FontSize);
    (ColumnNumber >= FontSize * 2, ColumnNumber < TextWidth )
  ),
  drawSymbol('*', FontSize),
  NextColumn is ColumnNumber + FontSize,
  drawA(TextWidth, TextHeight, FontSize, CurrentLine, NextColumn).

drawA(TextWidth, TextHeight, FontSize, CurrentLine, ColumnNumber) :-
  (ColumnNumber >= FontSize, ColumnNumber < FontSize * 2),
  (
    (CurrentLine >= 0, CurrentLine < FontSize);
    (CurrentLine >= FontSize * 2 , CurrentLine < FontSize * 3)
  ),
  drawSymbol('*', FontSize),
  NextColumn is ColumnNumber + FontSize,
  drawA(TextWidth, TextHeight, FontSize, CurrentLine, NextColumn).


drawA(TextWidth, TextHeight, FontSize, CurrentLine, ColumnNumber) :-
  (ColumnNumber >= FontSize, ColumnNumber < FontSize * 2),
  (
    (CurrentLine >= FontSize, CurrentLine < 2 * FontSize);
    (CurrentLine >= FontSize * 3, CurrentLine < TextHeight)
  ),
  drawSymbol(' ', FontSize),
  NextColumn is ColumnNumber + FontSize,
  drawA(TextWidth, TextHeight, FontSize, CurrentLine, NextColumn).

/* draw Spaces*/
/*-------------------------------------------------------------------------------------------------*/

drawSpaces(ColumnNumber, SpaceBetweenCharacters) :-
ColumnNumber >= SpaceBetweenCharacters.

drawSpaces(ColumnNumber, SpaceBetweenCharacters) :-
write(' '),
NextColumn is ColumnNumber + 1,
drawSpaces(NextColumn, SpaceBetweenCharacters).

/* draw Spaces*/
/*-------------------------------------------------------------------------------------------------*/



/*-------------------------------------------------------------------------------------------------*/
/* draw S */
drawS(TextWidth, TextHeight, FontSize, CurrentLine, ColumnNumber) :-
	ColumnNumber >= TextWidth.
/*
* 	Covers 1st, 3rd, and 5th rows which only have stars
*/
drawS(TextWidth, TextHeight, FontSize, CurrentLine, ColumnNumber) :-
  (
    (CurrentLine >= 0, CurrentLine < FontSize);
    (CurrentLine >= FontSize * 2, CurrentLine < FontSize * 3);
    (CurrentLine >= FontSize * 4, CurrentLine < FontSize * 5)
  ),
 	drawSymbol('*', FontSize),
	NextColumn is ColumnNumber + FontSize,
	drawS(TextWidth, TextHeight, FontSize, CurrentLine, NextColumn).

/*
* 	Covers 2nd, and 4th, rows 
*/
drawS(TextWidth, TextHeight, FontSize, CurrentLine, ColumnNumber) :-
(
   (CurrentLine >= FontSize, CurrentLine < FontSize * 2),
   (ColumnNumber >= 0, ColumnNumber < FontSize)
),
	drawSymbol('*', FontSize),
	NextColumn is ColumnNumber + FontSize,
	drawS(TextWidth, TextHeight, FontSize, CurrentLine, NextColumn).

drawS(TextWidth, TextHeight, FontSize, CurrentLine, ColumnNumber) :-
(
   (CurrentLine >= FontSize * 3, CurrentLine < FontSize * 4),
   (ColumnNumber >= FontSize * 2, ColumnNumber < FontSize * 3)
),
	drawSymbol('*', FontSize),
	NextColumn is ColumnNumber + FontSize,
	drawS(TextWidth, TextHeight, FontSize, CurrentLine, NextColumn).


drawS(TextWidth, TextHeight, FontSize, CurrentLine, ColumnNumber) :-
(
   (CurrentLine >= FontSize, CurrentLine < FontSize * 2),
   (ColumnNumber >= FontSize, ColumnNumber < FontSize * 3)
),
	drawSymbol(' ', FontSize),
	NextColumn is ColumnNumber + FontSize,
	drawS(TextWidth, TextHeight, FontSize, CurrentLine, NextColumn).


drawS(TextWidth, TextHeight, FontSize, CurrentLine, ColumnNumber) :-
(
   (CurrentLine >= FontSize * 3, CurrentLine < FontSize * 4),
   (ColumnNumber >= 0, ColumnNumber < FontSize * 2)
),
	drawSymbol(' ', FontSize),
	NextColumn is ColumnNumber + FontSize,
	drawS(TextWidth, TextHeight, FontSize, CurrentLine, NextColumn).
/* draw S */
/*-------------------------------------------------------------------------------------------------*/


/* draw U */
drawU(TextWidth, TextHeight, FontSize, CurrentLine, ColumnNumber) :-
    ColumnNumber >= TextWidth.

drawU(TextWidth, TextHeight, FontSize, CurrentLine, ColumnNumber) :-
    (CurrentLine >= 0, CurrentLine < TextHeight - FontSize),
    (ColumnNumber >= 0, ColumnNumber < FontSize; ColumnNumber >= FontSize * 2, ColumnNumber < TextWidth),
    drawSymbol('*', FontSize),
    NextColumn is ColumnNumber + FontSize,
    drawU(TextWidth, TextHeight, FontSize, CurrentLine, NextColumn).

drawU(TextWidth, TextHeight, FontSize, CurrentLine, ColumnNumber) :-
    (CurrentLine >= 0, CurrentLine < TextHeight - FontSize),
    (ColumnNumber >= FontSize, ColumnNumber < FontSize * 2),
    drawSymbol(' ', FontSize),
    NextColumn is ColumnNumber + FontSize,
    drawU(TextWidth, TextHeight, FontSize, CurrentLine, NextColumn).

drawU(TextWidth, TextHeight, FontSize, CurrentLine, ColumnNumber) :-
    (CurrentLine >= TextHeight - FontSize, CurrentLine < TextHeight),
    drawSymbol('*', FontSize),
    NextColumn is ColumnNumber + FontSize,
    drawU(TextWidth, TextHeight, FontSize, CurrentLine, NextColumn).

/* Update the draw predicate to include U */
draw(LeftRightMargin, SpaceBetweenCharacters, FontSize, CurrentLine, TextWidth, TextHeight) :-
    CurrentLine >= TextHeight.

draw(LeftRightMargin, SpaceBetweenCharacters, FontSize, CurrentLine, TextWidth, TextHeight) :-
    CurrentLine < TextHeight,
    write('|'), drawSymbol(' ', LeftRightMargin),
    ColumnNumber is 0,
    drawA(TextWidth, TextHeight, FontSize, CurrentLine, ColumnNumber),
    drawSpaces(0, SpaceBetweenCharacters),
    ColumnNumber is 0,
    drawS(TextWidth, TextHeight, FontSize, CurrentLine, ColumnNumber),
    drawSpaces(0, SpaceBetweenCharacters),
    ColumnNumber is 0,
    drawU(TextWidth, TextHeight, FontSize, CurrentLine, ColumnNumber),
    drawSymbol(' ', LeftRightMargin),
    write('|'),
    nl,
    NextLine is CurrentLine + 1,
    draw(LeftRightMargin, SpaceBetweenCharacters, FontSize, NextLine, TextWidth, TextHeight).
/*-------------------------------------------------------------------------------------------------*/


draw(LeftRightMargin, SpaceBetweenCharacters, FontSize, CurrentLine, TextWidth, TextHeight) :-
  CurrentLine >= TextHeight.
draw(LeftRightMargin, SpaceBetweenCharacters, FontSize, CurrentLine, TextWidth, TextHeight) :-
  CurrentLine < TextHeight,
  write('|'), drawSymbol(' ', LeftRightMargin),
  ColumnNumber is 0,
  drawA(TextWidth, TextHeight, FontSize, CurrentLine, ColumnNumber),


  /** this section should hold code for s & u; i included the outline from the TA for these sections **/
  drawSpaces(0, SpaceBetweenCharacters),
  ColumnNumber is 0,
  drawS(TextWidth, TextHeight, FontSize, CurrentLine, ColumnNumber),
  drawSpaces(0, SpaceBetweenCharacters),
  ColumnNumber is 0,
  % drawU
  /*---------------------------------------------*/


  drawSymbol(' ', LeftRightMargin),
  write('|'),
  nl,
  NextLine is CurrentLine + 1,
  draw(LeftRightMargin, SpaceBetweenCharacters, FontSize, NextLine, TextWidth, TextHeight).



drawVerticalLinesWithCharacters(LeftRightMargin, BottomTopMargin, SpaceBetweenCharacters, FontSize) :-
  CurrentLine is 0,
  TextWidth is FontSize * 3,
  TextHeight is FontSize * 5,
  draw(LeftRightMargin, SpaceBetweenCharacters, FontSize, CurrentLine, TextWidth, TextHeight).



asu(LeftRightMargin, BottomTopMargin, SpaceBetweenCharacters, FontSize) :-
  integer(LeftRightMargin), integer(BottomTopMargin), integer(SpaceBetweenCharacters), integer(FontSize),
  Width is (LeftRightMargin * 2 + SpaceBetweenCharacters * 2 + FontSize * 3 * 3 + 2),
  Height is (BottomTopMargin * 2 + FontSize * 5),

  drawHorizontalLine('-', Width),
  nl,
  drawVerticalLinesWithSpace('|', BottomTopMargin, Width),
  drawVerticalLinesWithCharacters(LeftRightMargin, BottomTopMargin, SpaceBetweenCharacters, FontSize), 
  drawVerticalLinesWithSpace('|', BottomTopMargin, Width),
  drawHorizontalLine('-', Width).
